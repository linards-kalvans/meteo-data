name: 'Terraform / Ansible Deploy'
on: 
  push:
    branches:
      - main
  workflow_dispatch:

env:
  UPCLOUD_USERNAME: ${{ secrets.UPCLOUD_USERNAME }}
  UPCLOUD_PASSWORD: ${{ secrets.UPCLOUD_PASSWORD }}

jobs:
  terraform-ansible:
    name: 'Terraform / Ansible'
    runs-on: ubuntu-latest

    steps:
      - name Condition infrastructure changed
        uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            terraform:
              - 'infrastructure/terraform/**'
            ansible:
              - 'infrastructure/ansible/**'
            
            
      - name: 'Checkout'
        uses: actions/checkout@v2

      - name: Set up SSH
        if: steps.changes.outputs.terraform == 'true' || steps.changes.outputs.ansible == 'true'
        run: |
          mkdir -p ./infrastructure/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ./infrastructure/.ssh/id_ed25519
          echo "${{ secrets.SSH_PUBLIC_KEY }}" > ./infrastructure/.ssh/id_ed25519.pub
          chmod 600 ./infrastructure/.ssh/id_ed25519
          chmod 644 ./infrastructure/.ssh/id_ed25519.pub

      # - name: Install Ansible
      #   run: |
      #     sudo apt-get update
      #     sudo apt-get install -y ansible
      #   if: "${{ inputs.run_ansible }}"

      - name: 'Terraform Setup'
        if: steps.changes.outputs.terraform == 'true' || steps.changes.outputs.ansible == 'true'
        uses: hashicorp/setup-terraform@v3
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
          terraform_wrapper: false

      - name: 'Terraform Init'
        if: steps.changes.outputs.terraform == 'true' || steps.changes.outputs.ansible == 'true'
        run: terraform init
        working-directory: infrastructure/terraform
      
      - name: 'Terraform Format'
        if: steps.changes.outputs.terraform == 'true' || steps.changes.outputs.ansible == 'true'
        run: terraform fmt -check
        working-directory: infrastructure/terraform

      - name: 'Terraform Plan'
        if: steps.changes.outputs.terraform == 'true'
        run: terraform plan
        working-directory: infrastructure/terraform

      - name: 'Terraform Apply'
        if: steps.changes.outputs.terraform == 'true'
        run: terraform apply -auto-approve
        working-directory: infrastructure/terraform
      
      - name: Terraform Output
        if: steps.changes.outputs.ansible == 'true'
        run: |
          echo "DAGSTER_PRIVATE_IP=$(terraform output -raw dagster_private_ip)" > "$GITHUB_OUTPUT"
          echo "DAGSTER_PUBLIC_IP=$(terraform output -raw dagster_public_ip)" >> "$GITHUB_OUTPUT"
          echo "OBJECT_STORAGE_ENDPOINT=https://$(terraform output -raw object_storage_private_endpoint_domain_name)" >> "$GITHUB_OUTPUT"
          echo "OBJECT_STORAGE_KEY_ID=$(terraform output -raw object_storage_key_id)" >> "$GITHUB_OUTPUT"
          echo "OBJECT_STORAGE_SECRET_ACCESS_KEY=$(terraform output -raw object_storage_secret_access_key)" >> "$GITHUB_OUTPUT"
        working-directory: infrastructure/terraform

      - name: Run Ansible
        if: steps.changes.outputs.ansible == 'true' || steps.changes.outputs.terraform == 'true'
        run: |
          ansible-playbook 01-ensure-docker.yml
        working-directory: infrastructure/ansible

       
